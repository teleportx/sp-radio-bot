import datetime

import psycopg2
from nextcord import Interaction, slash_command, SlashOption, Embed, message_command
from nextcord.ext.commands import Bot, Cog
import nextcord

import config as cfg
from functions.create_paste import create_paste
from sprapi.api import SPRadioApi

from functions.playback_control import play_song, stop_song
from functions import declination
from functions.get_radio_information import get_radio_information
from functions.interaction_ban import interaction_ban, check_ban

from views.DeleteMessageButton import DeleteMessageButtonView
from views.ReportNewSongWarningButton import ReportNewSongWarningButtonView
from views.UpdateRadioInformationButton import UpdateRadioInformationButtonView


class Commands(Cog):
    def __init__(self, bot: Bot) -> None:
        self.bot = bot

    @message_command
    async def eldaradio(self, inter: Interaction, message: nextcord.Message):
        if await check_ban(inter.user.id):
            await inter.send(cfg.Radio.ban_video_url, ephemeral=True)
            return
        await play_song(inter, cfg.Radio.eldaradio_stream_url)

    @message_command
    async def uuuuunoradio(self, inter: Interaction, message: nextcord.Message):
        if await check_ban(inter.user.id):
            await inter.send(cfg.Radio.ban_video_url, ephemeral=True)
            return
        await play_song(inter, cfg.Radio.uuuuunoradio_stream_url)

    @slash_command(description='SP radio')
    async def spradio(self):
        pass

    @spradio.subcommand(description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
    @interaction_ban
    async def play(self, inter: Interaction):
        await play_song(inter)

    @spradio.subcommand(description="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
    @interaction_ban
    async def stop(self, inter: Interaction):
        await stop_song(inter)

    @spradio.subcommand(description="–í–∞–º —Ç—é –ø–∏–ª–∏–≤—É–¥—É–ø–∞–π")
    @interaction_ban
    async def bear_theme(self, inter: Interaction):
        await play_song(inter, cfg.Radio.bear_theme_stream_url)

    @spradio.subcommand(description='–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫—Ä—É—Ç–∞—è –ø–µ—Å–Ω—è –∫–∞–∫-–ª–∏–±–æ —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å —Å–ø, —Ç–æ –ø—Ä–æ–ø–∏—à–∏—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!')
    @interaction_ban
    async def report_new_song(self, inter: Interaction):
        report_channel = self.bot.get_channel(cfg.Discord.reports_new_songs_channel_id)

        await inter.send('–í—ã –ø–æ–¥–∞–µ—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Å–Ω–∏ –Ω–∞ –°–ü–†–∞–¥–∏–æ. '
                         '–≠—Ç–∞ –ø–µ—Å–Ω—è –¥–æ–ª–∂–Ω–∞ —Ö–æ—Ç—å –∫–∞–∫-—Ç–æ —Å–≤—è–∑–∞–Ω–Ω–∞ —Å –°–ü, –∏–Ω–∞—á–µ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. '
                         '–ï—Å–ª–∏ –≤—ã –±—É–¥–∏—Ç–µ —Å–ø–∞–º–∏—Ç—å –∑–∞—è–≤–∫–∞–º–∏ –∏–ª–∏ —É–∫–∞–∑—ã–≤–∞—Ç—å –∑–∞–≤–µ–¥–æ–º–æ –ª–æ–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã –º–æ–∂–µ—Ç–µ '
                         '–±—ã—Ç—å –∑–∞–±–∞–Ω–µ–Ω—ã –∫–∞–∫ –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫, —Ç–∞–∫ –∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –°–ü–†–∞–¥–∏–æ',
                         view=ReportNewSongWarningButtonView(report_channel, self.bot.get_user),
                         ephemeral=True)

    @spradio.subcommand(description="–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –ø–µ—Å–Ω–µ")
    @interaction_ban
    async def now(self, inter: Interaction):
        api = SPRadioApi()
        song = await api.get_now_playing()

        lyrics = song.lyrics
        if lyrics == '':
            lyrics = '–õ–∏—Ä–∏–∫—Å—ã –¥–ª—è —ç—Ç–æ–π –ø–µ—Å–Ω–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'

        now_track_end = datetime.datetime.now() - song.played_at
        now_track_end_secs = song.duration - now_track_end.seconds
        seconds_text = declination.seconds(now_track_end_secs)

        duration_text = declination.seconds(song.duration)

        if now_track_end_secs <= 0:
            now_track_end_secs = 'now'
            seconds_text = ''

        embed = Embed(title=song.title, description=lyrics, timestamp=song.played_at)

        embed.set_author(name=song.author)
        embed.set_thumbnail(song.art)

        embed.add_field(name='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', value=f'–ü–µ—Å–Ω—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä–∞—Ç—å –≤ **{song.played_at.time()}**\n'
                                                 f'–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–µ—Å–Ω–∏ **{song.duration}** {duration_text}\n'
                                                 f'–ó–∞–∫–æ–Ω—á–∏—Ç –∏–≥—Ä–∞—Ç—å —á–µ—Ä–µ–∑ **{now_track_end_secs}** {seconds_text}')

        await inter.send(embed=embed, view=DeleteMessageButtonView())

    @spradio.subcommand(description="–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–¥–∏–æ –∏–ª–∏ –±–æ—Ç–µ")
    async def info(self, inter: Interaction,
                   choise: int = SlashOption(
                       name="about",
                       choices={"radio": 0, "bot": 1},
                   )):
        if await check_ban(inter.user.id):
            await inter.send(cfg.Radio.ban_video_url, ephemeral=True)
            return

        if choise == 0:
            embed = await get_radio_information()

            if embed is None:
                await inter.send('–ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω–æ—Ä—Ñ–º–∞—Ü–∏—é üò†', ephemeral=True)
                return

            await inter.send(embed=embed, view=UpdateRadioInformationButtonView(), ephemeral=True)

        elif choise == 1:
            if inter.user.id not in cfg.Discord.admin_ids:
                await inter.send('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è', ephemeral=True)
                return

            mutual_guilds = inter.user.mutual_guilds

            guilds = [guild.name for guild in self.bot.guilds]
            guilds_text = '\n'.join(guilds)

            total_users = 0
            for guild in self.bot.guilds:
                total_users += guild.member_count
            total_users = total_users

            total_listeners = 0

            for voice_client in self.bot.voice_clients:
                total_listeners += len(voice_client.channel.members) - 1

            mutual_guilds_text = [guild.name for guild in mutual_guilds]

            guilds_url = create_paste(guilds_text)

            embed = Embed(title='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ SPradio –±–æ—Ç')

            embed.set_thumbnail('https://radio.uuuuuno.net/static/uploads/browser_icon/192.1653387216.png')

            embed.add_field(name='–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', value=total_users)
            embed.add_field(name='–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤', value=len(self.bot.guilds))
            embed.add_field(name='–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤ —Å–ª—É—à–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞', value=len(self.bot.voice_clients))
            embed.add_field(name='–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª—É—à–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞', value=total_listeners)
            embed.add_field(name='–û–±—â–∏–µ —Å–µ—Ä–≤–µ—Ä–∞', value=' ,'.join(mutual_guilds_text), inline=False)
            embed.add_field(name='–í—Å–µ —Å–µ—Ä–≤–µ—Ä–∞ –±–æ—Ç–∞', value=f'||{guilds_url}||')

            await inter.send(
                '**–ù–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ—Å—å–±–∞ –Ω–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–æ–Ω—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –Ω–∏–∂–µ –Ω–µ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã–º –ª–∏—Ü–∞–º**',
                embed=embed,
                ephemeral=True)


    @spradio.subcommand()
    async def admin(self):
        pass

    @admin.subcommand(description='Ban user in bot SP radio')
    async def ban(self, inter: Interaction,
                  user_id: str = SlashOption(required=True),
                  reason: str = SlashOption(required=False)):
        if await check_ban(inter.user.id):
            await inter.send(cfg.Radio.ban_video_url, ephemeral=True)
            return

        elif inter.user.id not in cfg.Discord.admin_ids:
            await inter.send('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è', ephemeral=True)
            return

        try:
            cfg.db.insert_ban(user_id, reason)
            await inter.send('–ó–∞–±–∞–Ω–µ–Ω.', ephemeral=True)

            try:
                await self.bot.get_user(int(user_id))\
                    .send(f'–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–∏–Ω—ã –≤ –¥–∏—Å–∫–æ—Ä–¥ –±–æ—Ç–µ SP Radio –ø–æ –ø—Ä–∏—á–∏–Ω–µ `{reason}`\n'
                          f'{cfg.Radio.ban_video_url}')

            except:
                pass

        except psycopg2.errors.UniqueViolation:
            await inter.send('–û–Ω —É–∂–µ –∑–∞–±–∞–Ω–µ–Ω', ephemeral=True)

    @admin.subcommand(description='Unban user in bot SP radio')
    async def unban(self, inter: Interaction,
                    user_id: str = SlashOption(required=True)):
        if await check_ban(inter.user.id):
            await inter.send(cfg.Radio.ban_video_url, ephemeral=True)
            return

        elif inter.user.id not in cfg.Discord.admin_ids:
            await inter.send('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è', ephemeral=True)
            return

        cfg.db.delete_ban(user_id)
        await inter.send('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω!', ephemeral=True)

        try:
            await self.bot.get_user(int(user_id)) \
                .send(f'–ù–∞—à–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è! –í—ã –±—ã–ª–∏ —Ä–∞–∑–∞–±–∞–Ω–∏–Ω—ã –≤ –¥–∏—Å–∫–æ—Ä–¥ –±–æ—Ç–µ SP Radio! '
                      f'–ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –±–æ–ª—å—à–µ –Ω–µ –Ω–∞—Ä—É—à–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞')

        except:
            pass


def setup(bot: Bot):
    bot.add_cog(Commands(bot))
